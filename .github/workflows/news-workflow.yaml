name: Scrape and Send News

on:
  schedule:
    # ⏰ Ejecutar scraper + email en horarios específicos (UTC = ART+3)
    - cron: "0 11 * * *"  # 08:00 ART
    - cron: "0 15 * * *"  # 12:00 ART
    - cron: "0 18 * * *"  # 15:00 ART
    - cron: "0 21 * * *"  # 18:00 ART
    - cron: "0 23 * * *"  # 20:00 ART
  workflow_dispatch:

jobs:
  scrape:
    runs-on: ubuntu-latest

    env:
      APIFY_TOKEN: ${{ secrets.APIFY_TOKEN }}
      ACTOR_ID: ${{ secrets.APIFY_ACTOR_ID }}
      NEWS_QUERY: "tiktok"

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run scraper
        run: python scraper.py

      - name: Upload CSV as artifact
        uses: actions/upload-artifact@v4
        with:
          name: news-csv
          path: news_results.csv

  send_email:
    runs-on: ubuntu-latest
    needs: scrape  # ⛓️ Espera que el scraper termine

    env:
      EMAIL_USER: ${{ secrets.EMAIL_USER }}
      EMAIL_PASS: ${{ secrets.EMAIL_PASS }}
      EMAIL_TO: ${{ secrets.EMAIL_TO }}
      NEWS_QUERY: "tiktok"
      MAX_PER_COUNTRY: "100"

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Download CSV artifact
        uses: actions/download-artifact@v4
        with:
          name: news-csv

      - name: Send email
        run: python send_email.py
